// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: sessions.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createSession = `-- name: CreateSession :one
INSERT INTO sessions (user_id,token_hash,created_at)
		VALUES($1,$2,$3) ON CONFLICT (user_id) DO
		UPDATE
		SET token_hash=$2
RETURNING user_id
`

type CreateSessionParams struct {
	UserID    uuid.UUID
	TokenHash string
	CreatedAt time.Time
}

func (q *Queries) CreateSession(ctx context.Context, arg CreateSessionParams) (uuid.UUID, error) {
	row := q.db.QueryRowContext(ctx, createSession, arg.UserID, arg.TokenHash, arg.CreatedAt)
	var user_id uuid.UUID
	err := row.Scan(&user_id)
	return user_id, err
}
